# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

apiVersion: uds.dev/v1alpha1
kind: Package
metadata:
  name: jenkins
  namespace: {{ .Release.Namespace }}
spec:
  {{- if .Values.sso.enabled }}
  sso:
    - name: Jenkins Login
      redirectUris:
        - "https://jenkins.{{ .Values.domain }}/securityRealm/finishLogin"
    {{- if eq .Values.sso.protocol "saml" }}
      clientId: uds-package-jenkins-saml

      protocol: saml
      defaultClientScopes:
      {{- if .Values.sso.defaultClientScopes }}
        {{- range .Values.sso.defaultClientScopes }}
          - "{{ . }}"
        {{- end }}
      {{- end }}
      protocolMappers:
        - name: email
          protocol: saml
          protocolMapper: saml-user-attribute-mapper
          consentRequired: false
          config:
            attribute.nameformat: Basic
            user.attribute: email
            friendly.name: Email
            attribute.name: email
        - name: first-name
          protocol: saml
          protocolMapper: saml-user-attribute-mapper
          consentRequired: false
          config:
            attribute.nameformat: Basic
            user.attribute: firstName
            friendly.name: First Name
            attribute.name: first_name
        - name: last-name
          protocol: saml
          protocolMapper: saml-user-attribute-mapper
          consentRequired: false
          config:
            attribute.nameformat: Basic
            user.attribute: lastName
            friendly.name: Last Name
            attribute.name: last_name
        - name: grouplist
          protocol: saml
          protocolMapper: saml-group-membership-mapper
          consentRequired: false
          config:
            single: "false"
            attribute.nameformat: Basic
            full.path: "true"
            friendly.name: groups
            attribute.name: Groups
        - name: name
          protocol: saml
          protocolMapper: saml-user-attribute-mapper
          consentRequired: false
          config:
            attribute.nameformat: Basic
            user.attribute: username
            friendly.name: Name
            attribute.name: name
      groups:
        anyOf:
        {{- if .Values.sso.requiredGroups }}
          {{- range .Values.sso.requiredGroups }}
            - "{{ . }}"
          {{- end }}
        {{- end }}

      attributes:
        saml.client.signature: "false"

      secretName: {{ .Values.sso.secretName }}
      secretTemplate:
        sso: |-
          saml:
                        advancedConfiguration:
                          forceAuthn: false
                          spEntityId: "uds-package-jenkins-saml"
                        binding: "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"
                        displayNameAttributeName: "name"
                        emailAttributeName: "email"
                        groupsAttributeName: "groups"
                        idpMetadataConfiguration:
                          period: 1440
                          url: "https://sso.{{ .Values.domain }}/realms/uds/protocol/saml/descriptor"
    {{- else if eq .Values.sso.protocol "openid_connect"  }}
      clientId: uds-package-jenkins-openid-connect

      protocol: openid-connect
      defaultClientScopes:
      {{- if .Values.sso.defaultClientScopes }}
        {{- range .Values.sso.defaultClientScopes }}
          - "{{ . }}"
        {{- end }}
      {{- end }}

      secretName: {{ .Values.sso.secretName }}
      secretTemplate:
        sso: |-
          oic:
                        clientId: "uds-package-jenkins-openid-connect"
                        clientSecret: "clientField(secret)"
                        wellKnownOpenIDConfigurationUrl: "https://sso.{{ .Values.domain }}/realms/uds"
                        tokenServerUrl: "https://sso.{{ .Values.domain }}/realms/uds/protocol/openid-connect/token"
                        authorizationServerUrl: "https://sso.{{ .Values.domain }}/realms/uds/protocol/openid-connect/auth"
                        scopes: "openid profile"
                        disableSslVerification: false
                        endSessionEndpoint: "https://sso.{{ .Values.domain }}/realms/uds/protocol/openid-connect/logout"
                        escapeHatchEnabled: false
                        logoutFromOpenidProvider: true
                        userNameField: "preferred_username"
                        emailFieldName: "email"
                        groupsFieldName: "groups"
    {{- end }}
  {{- end }}

  monitor:
    - selector:
        app.kubernetes.io/name: jenkins
      targetPort: 8080
      portName: http
      path: /prometheus/
      description: Metrics

  network:
    serviceMesh:
      mode: ambient
    expose:
      - service: jenkins
        selector:
          app.kubernetes.io/name: jenkins
        gateway: tenant
        host: jenkins
        port: 8080
    allow:
      - direction: Ingress
        remoteGenerated: IntraNamespace

      - direction: Egress
        remoteGenerated: IntraNamespace

      - direction: Egress
        remoteGenerated: Anywhere
        selector:
          app.kubernetes.io/name: jenkins
        port: 443
        description: "Jenkins-plugins & SSO"

      - direction: Egress
        remoteNamespace: keycloak
        remoteSelector:
          app.kubernetes.io/name: keycloak
        selector:
          app.kubernetes.io/name: jenkins
        port: 8080
        description: "SSO Internal"

      - direction: Egress
        selector:
          jenkins/label: jenkins-jenkins-agent
        port: 443
        description: "Jenkins-jobs phone home"

      - direction: Egress
        selector:
          app.kubernetes.io/name: jenkins
        remoteGenerated: KubeAPI

      # Custom rules for unanticipated scenarios
      {{- range .Values.customNetworkPolicies }}
      - direction: {{ .direction }}
        selector:
          {{ .selector | toYaml | nindent 10 }}
        {{- if not .remoteGenerated }}
        remoteNamespace: {{ .remoteNamespace }}
        remoteSelector:
          {{ .remoteSelector | toYaml | nindent 10 }}
        port: {{ .port }}
        {{- else }}
        remoteGenerated: {{ .remoteGenerated }}
        {{- end }}
        description: {{ .description }}
      {{- end }}
