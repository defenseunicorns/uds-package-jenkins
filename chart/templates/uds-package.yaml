apiVersion: uds.dev/v1alpha1
kind: Package
metadata:
  name: jenkins
  namespace: {{ .Release.Namespace }}
spec:
  {{- if .Values.sso.enabled }}
  sso:
    - name: Jenkins Login
      clientId: uds-package-jenkins
      redirectUris:
        - "https://jenkins.{{ .Values.domain }}/securityRealm/finishLogin"
  {{- end }}

  monitor:
    - selector:
        app.kubernetes.io/name: jenkins
      targetPort: 8080
      portName: http
      path: /prometheus/
      description: Metrics

  network:
    expose:
      - service: jenkins
        selector:
          app.kubernetes.io/name: jenkins
        gateway: tenant
        host: jenkins
        port: 8080
    allow:
      - direction: Ingress
        remoteGenerated: IntraNamespace

      - direction: Egress
        remoteGenerated: IntraNamespace

      - direction: Egress
        remoteGenerated: Anywhere
        selector:
          app.kubernetes.io/name: jenkins
        port: 443
        description: "Jenkins-plugins & SSO"

      - direction: Egress
        remoteNamespace: keycloak
        remoteSelector:
          app.kubernetes.io/name: keycloak
        selector:
          app.kubernetes.io/name: jenkins
        port: 8080
        description: "SSO Internal"

      - direction: Egress
        selector:
          jenkins/label: jenkins-jenkins-agent
        port: 443
        description: "Jenkins-jobs phone home"

      - direction: Egress
        selector:
          app.kubernetes.io/name: jenkins
        remoteGenerated: KubeAPI

      # Custom rules for unanticipated scenarios
      {{- range .Values.customNetworkPolicies }}
      - direction: {{ .direction }}
        selector:
          {{ .selector | toYaml | nindent 10 }}
        {{- if not .remoteGenerated }}
        remoteNamespace: {{ .remoteNamespace }}
        remoteSelector:
          {{ .remoteSelector | toYaml | nindent 10 }}
        port: {{ .port }}
        {{- else }}
        remoteGenerated: {{ .remoteGenerated }}
        {{- end }}
        description: {{ .description }}
      {{- end }}
